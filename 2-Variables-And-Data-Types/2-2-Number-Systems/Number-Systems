Number systems
 - They allow us to transform data from the forms of human readable to machine readable 
 - And from Machine readable to Human readable format
 
 - Decimal (base 10)
  - The number system used in everyday life
	- 2371	2*10^3 + 3*10^2 + 7*10^1 + 1*10^0
	- 924		 9*10^2 + 2*10^1 + 4*10^0
	- 47 			  4*10^1 + 7*10^0

 - Binary (base 2)
  - Two states (0 or 1)
	- 100101	1*2^5 + 0*2^4 + 0*2^3 + 1*2^2 + 0*2^1 + 1*2^0
 	- 10010		1*2^4 + 0*2^3 + 0*2^2 + 1*2^1 + 0*2^0
 	- 111		1*2^2 + 1*2^1 + 1*2^0

 - Hexadecimal (base )
  - Used to shorten the length of how we represent binary numbers in the memory
  - Take a number and split it in to 4 bits
  - Each group is assigned a symbol to represent it
  
Binary	| Decimal | Hex
0000	  0	    0
0001	  1	    1
0010	  2	    2
0011	  3	    3
0100	  4	    4
0101	  5	    5
0110	  6	    6
0111	  7	    7
1000	  8	    8
1001	  9	    9
1010	  10	    A
1011	  11	    B
1100	  12	    C
1101	  13	    D
1110	  14	    E
1111	  15	    F

 Example 
 0110	1110	0011	0000	1111	0001	0011	1111
 6	E	3	0	F	1	3	F

0x 6E30F13F

- Padding
  - If the number of bits can't be split in to groups of four evenly, then 0s can be padded to the 	front of the binary number 

- Octal system (base )
 - Older system mostly not currently used
 - Binary numbers can be split into groups of 3 to shorten the length of a binary number

Binary	| Decimal | Oct
000	  0	    0
001	  1	    1
010	  2	    2
011	  3	    3
100	  4	    4
101	  5	    5
110	  6	    6
111	  7	    7

 Example 
 01	101	110	001	100	001	111	000	100	111	111
 1	5	6	1	4	1	7	0	4	7	7

 0 15614170477


Summary 
- All data is represented by a bunch of grouped cells of 0's and 1's in memory
- As the range of your data grows, so will the number of digits you need to represent the data in 	memory
- Hexadecimal system makes it a little easier for humans to handle streams of data with 1's and 0's
- Octal has the same goal as Hexadecimal, but it's almost no longer used in modern times. It's 		just mentioned here awareness
